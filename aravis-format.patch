--- aravis-0.8.0/src/arvgvstream.c.orig	2020-08-17 15:26:01.681058000 +0200
+++ aravis-0.8.0/src/arvgvstream.c	2020-08-19 18:19:13.369731905 +0200
@@ -314,7 +314,7 @@
 	block_end = block_size + block_offset;
 
 	if (block_end > frame->buffer->priv->size) {
-		arv_debug_stream_thread ("[GvStream::process_data_block] %" G_GUINT64_FORMAT " unexpected bytes in packet %u "
+		arv_debug_stream_thread ("[GvStream::process_data_block] %" G_GINTPTR_FORMAT " unexpected bytes in packet %u "
 					 " for frame %" G_GUINT64_FORMAT,
 					 block_end - frame->buffer->priv->size,
 					 packet_id, frame->frame_id);
@@ -1333,7 +1333,7 @@
 		thread_data = priv->thread_data;
 
 		statistic_string = arv_statistic_to_string (thread_data->statistic);
-		arv_debug_stream (statistic_string);
+		arv_debug_stream ("%s", statistic_string);
 		g_free (statistic_string);
 		arv_statistic_free (thread_data->statistic);
 
--- aravis-0.8.0/src/arvuvdevice.c.orig	2020-08-17 15:26:01.683058000 +0200
+++ aravis-0.8.0/src/arvuvdevice.c	2020-08-19 18:36:37.887406601 +0200
@@ -468,9 +468,9 @@
 	}
 
 	arv_debug_device ("MAX_DEVICE_RESPONSE_TIME = 0x%08x", response_time);
-	arv_debug_device ("DEVICE_CAPABILITY        = 0x%016lx", device_capability);
-	arv_debug_device ("SRBM_ADDRESS =             0x%016lx", offset);
-	arv_debug_device ("MANIFEST_TABLE_ADDRESS =   0x%016lx", manifest_table_address);
+	arv_debug_device ("DEVICE_CAPABILITY        = 0x%016" G_GINT64_MODIFIER "x", device_capability);
+	arv_debug_device ("SRBM_ADDRESS =             0x%016" G_GINT64_MODIFIER "x", offset);
+	arv_debug_device ("MANIFEST_TABLE_ADDRESS =   0x%016" G_GINT64_MODIFIER "x", manifest_table_address);
 
 	priv->timeout_ms = MAX (ARV_UVCP_DEFAULT_RESPONSE_TIME_MS, response_time);
 
@@ -486,7 +486,7 @@
 	arv_debug_device ("U3VCP_CAPABILITY =         0x%08x", u3vcp_capability);
 	arv_debug_device ("MAX_CMD_TRANSFER =         0x%08x", max_cmd_transfer);
 	arv_debug_device ("MAX_ACK_TRANSFER =         0x%08x", max_ack_transfer);
-	arv_debug_device ("SIRM_OFFSET =              0x%016lx", sirm_offset);
+	arv_debug_device ("SIRM_OFFSET =              0x%016" G_GINT64_MODIFIER "x", sirm_offset);
 
 	priv->cmd_packet_size_max = MIN (priv->cmd_packet_size_max, max_cmd_transfer);
 	priv->ack_packet_size_max = MIN (priv->ack_packet_size_max, max_ack_transfer);
@@ -509,7 +509,7 @@
 
 	arv_debug_device ("SI_INFO =                  0x%08x", si_info);
 	arv_debug_device ("SI_CONTROL =               0x%08x", si_control);
-	arv_debug_device ("SI_REQ_PAYLOAD_SIZE =      0x%016lx", si_req_payload_size);
+	arv_debug_device ("SI_REQ_PAYLOAD_SIZE =      0x%016" G_GINT64_MODIFIER "x", si_req_payload_size);
 	arv_debug_device ("SI_REQ_LEADER_SIZE =       0x%08x", si_req_leader_size);
 	arv_debug_device ("SI_REQ_TRAILER_SIZE =      0x%08x", si_req_trailer_size);
 	arv_debug_device ("SI_MAX_LEADER_SIZE =       0x%08x", si_max_leader_size);
@@ -526,15 +526,15 @@
 		return FALSE;
 	}
 
-	arv_debug_device ("MANIFEST_N_ENTRIES =       0x%016lx", manifest_n_entries);
+	arv_debug_device ("MANIFEST_N_ENTRIES =       0x%016" G_GINT64_MODIFIER "x", manifest_n_entries);
 
 	string = g_string_new ("");
 	arv_g_string_append_hex_dump (string, &entry, sizeof (entry));
 	arv_debug_device ("MANIFEST ENTRY\n%s", string->str);
 	g_string_free (string, TRUE);
 
-	arv_debug_device ("genicam address =          0x%016lx", entry.address);
-	arv_debug_device ("genicam size    =          0x%016lx", entry.size);
+	arv_debug_device ("genicam address =          0x%016" G_GINT64_MODIFIER "x", entry.address);
+	arv_debug_device ("genicam size    =          0x%016" G_GINT64_MODIFIER "x", entry.size);
 
 	data = g_malloc0 (entry.size);
 	success = success && arv_device_read_memory (device, entry.address, entry.size, data, NULL);
--- aravis-0.8.0/src/arvuvstream.c.orig	2020-08-17 15:26:01.683058000 +0200
+++ aravis-0.8.0/src/arvuvstream.c	2020-08-19 18:39:27.603153838 +0200
@@ -171,7 +171,7 @@
 				case ARV_UVSP_PACKET_TYPE_TRAILER:
 					if (buffer != NULL) {
 						arv_log_stream_thread ("Received %" G_GUINT64_FORMAT
-								       " bytes - expected %" G_GUINT64_FORMAT,
+								       " bytes - expected %zu",
 								       offset, buffer->priv->size);
 
 						/* If the image was incomplete, drop the frame and try again. */
@@ -287,7 +287,7 @@
 	alignment = 1 << ((si_info & ARV_SI_INFO_ALIGNMENT_MASK) >> ARV_SI_INFO_ALIGNMENT_SHIFT);
 
 	arv_debug_stream ("SI_INFO            =       0x%08x", si_info);
-	arv_debug_stream ("SI_REQ_PAYLOAD_SIZE =      0x%016lx", si_req_payload_size);
+	arv_debug_stream ("SI_REQ_PAYLOAD_SIZE =      0x%016" G_GINT64_MODIFIER "x", si_req_payload_size);
 	arv_debug_stream ("SI_REQ_LEADER_SIZE =       0x%08x", si_req_leader_size);
 	arv_debug_stream ("SI_REQ_TRAILER_SIZE =      0x%08x", si_req_trailer_size);
 
--- aravis-0.8.0/src/arvzip.c.orig	2020-08-17 15:26:01.683058000 +0200
+++ aravis-0.8.0/src/arvzip.c	2020-08-19 18:50:28.016242740 +0200
@@ -86,7 +86,7 @@
 		ptr = zip->buffer + zip->header_size + offset;
 		if (ARV_GUINT32_FROM_LE_PTR (ptr, 0) != 0x02014b50) {
 			arv_debug_misc ("[Zip::build_file_list] Magic number of central directory not found (0x02014b50)");
-			arv_debug_misc ("[Zip::build_file_list] Expected at 0x%" G_GINT64_MODIFIER "x - found 0x%08x instead",
+			arv_debug_misc ("[Zip::build_file_list] Expected at 0x%" G_GSIZE_MODIFIER "x - found 0x%08x instead",
 					zip->header_size + offset, ARV_GUINT32_FROM_LE_PTR (ptr, 0));
 		       	return;
 		}
@@ -191,9 +191,9 @@
         zip->header_size = zip->directory_position - (zip->directory_offset + zip->directory_size);
 
 	arv_log_misc ("[Zip::new] number of files = %d", zip->n_files);
-	arv_log_misc ("[Zip::new] directory position = 0x%08" G_GINT64_MODIFIER "x", zip->directory_position);
+	arv_log_misc ("[Zip::new] directory position = 0x%08" G_GINTPTR_MODIFIER "x", zip->directory_position);
 	arv_log_misc ("[Zip::new] directory size = %" G_GSIZE_FORMAT, zip->directory_size);
-	arv_log_misc ("[Zip::new] directory offset = 0x%08" G_GINT64_MODIFIER "x", zip->directory_offset);
+	arv_log_misc ("[Zip::new] directory offset = 0x%08" G_GINTPTR_MODIFIER "x", zip->directory_offset);
 	arv_log_misc ("[Zip::new] header size = %" G_GSIZE_FORMAT, zip->header_size);
 
         arv_zip_build_file_list (zip);
--- aravis-0.8.0/src/arvgvsp.c.orig	2020-08-17 15:26:01.681058000 +0200
+++ aravis-0.8.0/src/arvgvsp.c	2020-08-19 18:51:36.585871266 +0200
@@ -180,7 +180,7 @@
 				arv_gvsp_packet_get_frame_id (packet),
 				arv_gvsp_packet_has_extended_ids (packet) ? " extended" : "");
 	g_string_append_printf (string, "packet_id    = %8u\n", arv_gvsp_packet_get_packet_id (packet));
-	g_string_append_printf (string, "data_size    = %8" G_GUINT64_FORMAT "\n", arv_gvsp_packet_get_data_size (packet, packet_size));
+	g_string_append_printf (string, "data_size    = %8" G_GSIZE_FORMAT "\n", arv_gvsp_packet_get_data_size (packet, packet_size));
 
 	switch (content_type) {
 		case ARV_GVSP_CONTENT_TYPE_DATA_LEADER:
--- aravis-0.8.0/tests/loadhttptest.c.orig	2020-08-17 15:26:01.685058000 +0200
+++ aravis-0.8.0/tests/loadhttptest.c	2020-08-19 18:52:16.952319249 +0200
@@ -45,7 +45,7 @@
 
 	g_strfreev (tokens);
 
-	printf ("size = %lu\n", len);
+	printf ("size = %" G_GSIZE_FORMAT "\n", len);
 	printf ("%s\n", genicam != NULL ? genicam : "NULL");
 
 	g_free (genicam);
